version: '3.3'
services:

  db:
    container_name: foodgram-db
    image: postgres:16.2-alpine
    restart: always
    env_file: .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
  frontend:
    container_name: foodgram-front
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_backend:/static_backend/
      - media_backend:/media_backend/
    depends_on:
      - backend
  backend:
    container_name: foodgram-back
    build:
      context: ../backend
    env_file: .env
    volumes:
      - static_backend:/app/static_backend/
      - media_backend:/app/media_backend/
    depends_on:
      - db


volumes:
  static_backend:
  media_backend:
  pg_data: